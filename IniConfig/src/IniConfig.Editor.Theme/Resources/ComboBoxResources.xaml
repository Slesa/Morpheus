<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:controls="clr-namespace:IniConfig.Editor.Theme.Controls">

    <ItemsPanelTemplate x:Key="ComboBox.ItemsPanelTemplate">
        <StackPanel IsItemsHost="True" />
    </ItemsPanelTemplate>

    <Style x:Key="ComboBoxItem.PickList" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">

                    <Border
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup
                                x:Name="CommonStates">
                                <VisualState
                                    x:Name="Normal" />
                                <VisualState
                                    x:Name="MouseOver" />
                                <VisualState
                                    x:Name="Focused">
                                    <!--
                                        <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                        Storyboard.TargetName="highlightedRectangle"
                                        Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame
                                        KeyTime="0"
                                        Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                        Storyboard.TargetName="selectedContentRectangle"
                                        Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame
                                        KeyTime="0"
                                        Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                        Storyboard.TargetName="grid"
                                        Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame
                                        KeyTime="0"
                                        Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    -->
                                </VisualState>
                                <VisualState
                                    x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup
                                x:Name="SelectionStates">
                                <VisualState
                                    x:Name="Unselected" />
                                <VisualState
                                    x:Name="Selected" />
                                <VisualState
                                    x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle
                                x:Name="highlightedRectangle"
                                Fill="{DynamicResource Brush.Module.Browser}"
                                Opacity="0" />
                            <Grid
                                x:Name="cContent"
                                Margin="10,2,2,2">
                                <Grid
                                    x:Name="grid"
                                    Opacity="1">
                                    <ContentPresenter
                                        x:Name="contentPresenter"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="Center"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                                <Rectangle
                                    x:Name="selectedContentRectangle"
                                    Fill="{DynamicResource Brush.Foreground}"
                                    Opacity="0">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush
                                            AlignmentX="Left"
                                            AlignmentY="Center"
                                            Stretch="None"
                                            Visual="{Binding ElementName=contentPresenter}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="highlightedRectangle" Property="Opacity" Value="1" />
                            <Setter TargetName="selectedContentRectangle" Property="Opacity" Value="1" />
                            <Setter TargetName="grid" Property="Opacity" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="1,1,1,1" />
    </Style>

    <Style x:Key="ComboBox.Picklist" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItem.PickList}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <!--  The ToggleButton is databound to the ComboBox itself to toggle IsDropDownOpen  -->
                        <ToggleButton
                            x:Name="ToggleButton"
                            Grid.Column="2"
                            ClickMode="Press"
                            Content="{TemplateBinding controls:AttachedProperties.Title}"
                            Focusable="false"
                            Foreground="{TemplateBinding Foreground}"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{DynamicResource ToggleButton.Standard}"
                            controls:AttachedProperties.Icon="{TemplateBinding controls:AttachedProperties.Icon}" />

                        <!--  The TextBox must be named PART_EditableTextBox or ComboBox will not recognize it  -->

                        <!--  The Popup shows the list of items in the ComboBox. IsOpen is databound to IsDropDownOpen which is toggled via the ComboBoxToggleButton  -->
                        <Popup
                            x:Name="Popup"
                            AllowsTransparency="False"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Top"
                            PopupAnimation="Slide">
                            <Grid
                                x:Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="{DynamicResource WindowBackgroundBrush}"
                                    BorderBrush="{DynamicResource Brush.Foreground.Inverted}"
                                    BorderThickness="1" />
                                <ScrollViewer
                                    CanContentScroll="True"
                                    HorizontalScrollBarVisibility="Auto"
                                    SnapsToDevicePixels="True"
                                    Style="{DynamicResource ScrollViewer.ComboBox.PickList}"
                                    VerticalScrollBarVisibility="Auto">

                                    <!--  The StackPanel is used to display the children by setting IsItemsHost to be True  -->
                                    <StackPanel
                                        IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Contained" />

                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  This forces the DropDown to have a minimum size if it is empty  -->
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" />
                            <!--<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />-->
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="ComboBox.RecentFiles" BasedOn="{StaticResource ComboBox.Picklist}" TargetType="ComboBox">
        <Setter Property="controls:AttachedProperties.Icon" Value="{StaticResource Images.RecentFiles}"/>
    </Style>
    
</ResourceDictionary>